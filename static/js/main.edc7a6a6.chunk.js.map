{"version":3,"sources":["controller/tickerRequests.js","controller/portfolioReturns.js","ui/components/Header/MainHeader.js","ui/components/Buttons/DcaButton.js","ui/components/Header/ScrollHeader.js","ui/views/ScrollView.js","ui/components/DatePicker.js","controller/Query.js","ui/views/CalcView.js","pages/Home.js","ui/components/PortfolioCard.js","ui/views/PortfolioCardView.js","pages/Results.js","controller/CardInfo.js","App.js","reportWebVitals.js","index.js"],"names":["api","this","cp","require","coins","startDate","a","endDate","historical","coin","end","interval","limit","result","dateAcc","Date","ed","candles","toISOString","concat","setFullYear","getFullYear","map","open","high","low","close","transactions","sort","b","date","dates","length","__prices","raw_prices","raw","price","coinObj","activeCoins","filter","is_active","id","forEach","tickerId","coinId","split","name","slice","pfr","buyPrice","push","setMonth","getMonth","tickerHistory","portfolio","i","j","toDateString","timestamp","cost","amount","avgPrice","toFixed","percentGains","totalAmountPaid","totalValuation","totalCoins","profit","totalAmount","reduce","amountPaid","Number","MainHeader","props","Navbar","bg","variant","Brand","title","DcaButton","style","height","width","justifyContent","alignItems","display","Button","size","color","onClick","symbol","ScrollHeader","header","ScrollView","useState","setHeader","marginBottom","Divider","ticker","onSelectedCoinChange","handleClick","DatePick","utils","DateFnsUtils","DatePicker","margin","label","format","value","selectedDate","onChange","KeyboardButtonProps","QueryApi","apiObject","_api","getCoins","Coins","tradeHistory","dateTo","dateFrom","coinTicker","setCoin","transactionDetails","transactionInfo","portfolioInfo","console","log","CalcView","headerStyle","fontFamily","setCoins","selectedCoin","setSelectedCoin","setAmount","setDateFrom","setDateTo","history","useHistory","useEffect","fetchCoins","Grid","container","direction","justify","spacing","item","align","xs","TextField","onBlur","event","target","getTransactionDetails","then","details","info","buyAmount","coinName","Home","className","PortfolioCard","num","cardInfo","category","text","icon","Card","CardContent","Typography","gutterBottom","marginTop","PortfolioCardView","cardProp","description","Results","setCardInfo","results","cardProps","location","state","NotFound","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc7a6a6.chunk.js","sourcesContent":["import { ticker } from 'coinpaprika-js';\r\n\r\nclass api {\r\n    //buy_sell_dt = {type: 'buy', date : '2014-01-19', price: 200}\r\n    constructor(){\r\n        this.cp = require('coinpaprika-js');\r\n        this.coins = {}\r\n    }\r\n\r\n    async __prices(startDate, endDate = false){\r\n        return await this.cp.historical(this.coin, startDate, { end: endDate, interval: \"1d\", limit: 5000 })\r\n     }\r\n\r\n     async __pricesCandles(startDate, endDate = false){\r\n        var result = []\r\n        var dateAcc = new Date(startDate);\r\n        var ed = new Date(endDate)\r\n        while( dateAcc < ed){\r\n            result = result.concat(await this.cp.candles(this.coin, dateAcc.toISOString(), {end: endDate}))\r\n            dateAcc.setFullYear(dateAcc.getFullYear() + 1)\r\n        }\r\n        result = result.map(a => [a.open, a.high, a.low, a.close])\r\n        return result\r\n     }\r\n     \r\n     async raw_prices(transactions){\r\n        //Todo validate array\r\n        transactions.sort((a, b) => (new Date(a.date) > new Date(b.date)) ? 1 : -1 )\r\n        var dates = transactions.map(a => a.date)\r\n        const startDate = dates[0]\r\n        const endDate = dates[transactions.length - 1]\r\n        return this.__prices(startDate, endDate)\r\n     }\r\n\r\n     async prices(transactions){\r\n        var raw = await this.raw_prices(transactions)\r\n        return raw.map(a => a.price)\r\n    }\r\n\r\n    async getCoins(){\r\n        var coinObj = await this.cp.coins();\r\n        const activeCoins = coinObj\r\n            .filter(a => a.is_active)\r\n            .map(a => a.id)\r\n        \r\n         activeCoins.forEach(tickerId => {\r\n            var coinId = tickerId.split('-')[0]\r\n            var name = tickerId.split('-')[1]\r\n            this.coins[coinId] = {name: name, tickerId: tickerId}\r\n        });\r\n\r\n        return activeCoins.slice(0,100);\r\n    }\r\n\r\n    setCoin(coin){\r\n        this.coin = coin;\r\n    }\r\n}\r\nexport {api};","\r\nclass pfr {\r\n    //buy_sell_dt = {type: 'buy', date : '2014-01-19', price: 200}\r\n\r\n    static transactions(startDate, endDate, buyPrice, period= 'month'){\r\n        var result = []\r\n        var dateAcc = new Date(startDate);\r\n        var ed = new Date(endDate)\r\n        // todo: add period \r\n        while( dateAcc < ed){\r\n            result.push({date: dateAcc.toISOString(), price: buyPrice})\r\n            dateAcc.setMonth(dateAcc.getMonth() + 1)\r\n        }\r\n        return result\r\n    }\r\n\r\n    static portfolio (transactions, tickerHistory){\r\n        var portfolio = []\r\n        for (var i in tickerHistory){\r\n            for (var j in transactions){\r\n                if ( new Date(transactions[j].date).toDateString() == \r\n                     new Date(tickerHistory[i].timestamp).toDateString()){\r\n                    var cost = tickerHistory[i].price\r\n                    transactions[j].amount = transactions[j].price/cost\r\n                    transactions[j].cost = cost\r\n                    portfolio.push(transactions[j])\r\n                }\r\n            }\r\n        }\r\n        return portfolio\r\n    }\r\n\r\n    static portfolioInfo(portfolio){\r\n        var result = {}\r\n        result.avgPrice = this.avgPrice(portfolio).toFixed(2);\r\n        result.percentGains = this.percentGains(portfolio).toFixed(2)\r\n        result.totalAmountPaid = this.totalAmountPaid(portfolio).toFixed(2)\r\n        result.totalValuation = this.totalValuation(portfolio).toFixed(2)\r\n        result.totalCoins = this.totalCoins(portfolio).toFixed(2)\r\n        result.profit = result.totalValuation - result.totalAmountPaid \r\n        result.profit = result.profit.toFixed(2)\r\n        return result\r\n    }\r\n\r\n\r\n    static avgPrice(portfolio){\r\n        var totalAmount = this.totalAmountPaid(portfolio)\r\n        var result = portfolio.map(a => (a.cost)*(a.price)/totalAmount)\r\n                .reduce((a,b) => a + b)\r\n        return result\r\n    }\r\n    \r\n    static percentGains(portfolio){\r\n        var amountPaid = this.totalAmountPaid(portfolio)\r\n        var gains = this.totalValuation(portfolio)\r\n        return 100 * (gains-amountPaid)/amountPaid\r\n    }\r\n\r\n    static totalAmountPaid(portfolio){\r\n        var result = portfolio.map(a => Number(a.price))\r\n                    .reduce((a,b) => a + b)\r\n        return result\r\n    }\r\n\r\n    static totalValuation(portfolio){\r\n        var totalCoins = this.totalCoins(portfolio)\r\n        portfolio.sort((a, b) => (new Date(a.date) > new Date(b.date)) ? 1 : -1 )\r\n        var lastPrice = portfolio[portfolio.length - 1].cost\r\n        var result = lastPrice * totalCoins\r\n        return result\r\n    }\r\n\r\n    static totalCoins(portfolio){\r\n        var result = portfolio.map(a => a.amount)\r\n                    .reduce((a, b) => a + b)\r\n        return result\r\n    }\r\n\r\n\r\n}\r\nexport {pfr};","import Navbar from 'react-bootstrap/Navbar'; \r\n\r\nconst MainHeader = (props) => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>{props.title}</Navbar.Brand>\r\n        </Navbar>\r\n    );\r\n  };\r\n\r\n  export default MainHeader","import Button from '@material-ui/core/Button';\r\n\r\nconst DcaButton = (props) =>{\r\n    const style = {\r\n      height: '3em',\r\n      width: '200px',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: \"flex\"\r\n    }\r\n    return (\r\n      <div style={style} >\r\n        <Button \r\n        size=\"medium\" \r\n        variant=\"outlined\" \r\n        color=\"primary\"\r\n        onClick= {props.onClick}\r\n        >\r\n          {props.symbol}\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\nexport default DcaButton;","const ScrollHeader = (props) => {\r\n    return (\r\n      <div style={{justifyContent: 'center', alignItems:'center', display:'flex'}}>\r\n        <h3>{props.header}</h3>\r\n      </div>\r\n    )\r\n  }\r\nexport default ScrollHeader","import React, {useState} from 'react';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport HorizontalScroll from 'react-scroll-horizontal';\r\nimport DcaButton from '../components/Buttons/DcaButton';\r\nimport ScrollHeader from '../components/Header/ScrollHeader';\r\n\r\nconst ScrollView = (props) => {\r\n    const [header, setHeader] = useState('Bitcoin');\r\n    \r\n    const handleClick = (coin) => {\r\n      const ticker = coin[0] + '-' + coin[1]\r\n      const name = coin[1]\r\n      setHeader(name)\r\n      props.onSelectedCoinChange(ticker)\r\n    }\r\n  \r\n    return( \r\n      <div style={{justifyContent: 'center', alignItems:'center', display:'flex', marginBottom: '40px'}}>\r\n        <div style={{ height: `3em` , width: '600px'}}>\r\n          <ScrollHeader header={header}/>\r\n          <Divider/>\r\n          <HorizontalScroll>\r\n            {props.coins.map(function (coin){\r\n              return <DcaButton onClick= {() => handleClick(coin)} \r\n                                symbol = {coin[0]}\r\n                                name = {coin[1]}\r\n                                />;\r\n            })}\r\n          </HorizontalScroll>\r\n          <Divider/>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ScrollView","import React, {useState} from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  DatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nconst DatePick = (props) =>{  \r\n    return(\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label={props.label}\r\n          format=\"MM/yyyy\"\r\n          value={props.selectedDate}\r\n          onChange={props.onChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    )\r\n  \r\n  }\r\n\r\nexport default DatePick","const { api } = require('./tickerRequests.js')\r\nconst {pfr} = require('./portfolioReturns.js')\r\n\r\nclass QueryApi {\r\n\r\n    constructor(apiObject= api){\r\n        // make this an interface\r\n        this._api = new apiObject()\r\n        this.coins = this._api.getCoins()\r\n    }\r\n\r\n    get Coins(){\r\n        return this.coins\r\n    }\r\n\r\n}\r\n\r\nexport async function getCoins(amount = 20){\r\n    const api = new QueryApi()\r\n    var coins = await api.Coins\r\n    coins = coins.slice(0,amount)\r\n    coins = coins.map((coin) => coin.split(/-(.+)/))\r\n    return coins\r\n}\r\n\r\nexport async function getTransactionDetails(tradeHistory){\r\n    const {dateTo, dateFrom, amount, coinTicker} = tradeHistory\r\n\r\n    const api = new QueryApi()\r\n    api._api.setCoin(coinTicker)\r\n    const transactions = pfr.transactions(dateFrom, dateTo, amount)\r\n    const tickerHistory = await api._api.raw_prices(transactions)\r\n    const transactionDetails = pfr.portfolio(transactions, tickerHistory)\r\n    const transactionInfo = pfr.portfolioInfo(transactionDetails)\r\n    console.log(transactionDetails)\r\n    console.log(transactionInfo)\r\n    return transactionInfo\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport ScrollView from './ScrollView';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport DatePicker from '../components/DatePicker'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport {getCoins, getTransactionDetails} from '../../controller/Query'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst CalcView = (props) => {\r\n    const headerStyle =   {\r\n      fontFamily: 'lato',\r\n    }\r\n    \r\n    const [coins, setCoins] = useState([[\"btc\", \"bitcoin\"]]);\r\n    const [selectedCoin, setSelectedCoin] = useState('btc-bitcoin');\r\n    const [amount, setAmount] = useState(50);\r\n    const [dateFrom, setDateFrom] = useState(new Date('2014-04-18'))\r\n    const [dateTo, setDateTo] = useState(new Date('2017-08-18'))\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      //fetch coins type to populate intial set of coin choices\r\n      const fetchCoins = async() => {\r\n        const coins =  await getCoins()\r\n        setCoins(coins)\r\n      }\r\n      fetchCoins()\r\n    }, []);\r\n\r\n    const handleAmountChange = (event) => {\r\n      // add data handling\r\n      setAmount(event.target.value);\r\n    }\r\n\r\n    const handleSelectedCoinChange= (ticker) =>{\r\n      setSelectedCoin(ticker)\r\n    }\r\n\r\n    const handleDateFromChange = (date) => {\r\n      // add data handling\r\n      setDateFrom(date);\r\n    }\r\n\r\n    const handleDateToChange = (date) => {\r\n      // add data handling\r\n      setDateTo(date);\r\n    }\r\n\r\n    const handleCalculateClick = () =>{\r\n      const tradeHistory = {\r\n        dateTo: dateTo,\r\n        dateFrom: dateFrom,\r\n        amount: amount,\r\n        coinTicker: selectedCoin,\r\n      }\r\n      console.log(tradeHistory)\r\n      getTransactionDetails(tradeHistory).then((details) => {\r\n        const info = {\r\n          details: details,\r\n          buyAmount: amount,\r\n          dateTo: dateTo,\r\n          dateFrom: dateFrom,\r\n          coinName: selectedCoin.split('-')[1]\r\n        }\r\n        history.push('/results', info)\r\n      })\r\n    }\r\n\r\n\r\n\r\n    return(\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n        <Grid item align=\"center\" xs>\r\n          <h3 style={headerStyle}>Historical Crypto Cost Average</h3>\r\n        </Grid>\r\n  \r\n        <Grid item align=\"center\" xs>\r\n          <h5 style={headerStyle} >See how rich you could have been</h5>\r\n        </Grid>\r\n  \r\n        <Grid xs>\r\n            <ScrollView onSelectedCoinChange={handleSelectedCoinChange} coins = {coins}/>\r\n        </Grid>\r\n  \r\n        <Grid item align=\"center\" xs>\r\n          <TextField onBlur={handleAmountChange} id=\"standard-basic\" label=\"Amount\" />\r\n        </Grid>\r\n        \r\n        <Grid item align=\"center\" xs>\r\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\r\n            <Grid item align='center' xs>\r\n              <DatePicker selectedDate ={dateFrom} onChange={handleDateFromChange}  label= \"From\"/>\r\n            </Grid>\r\n            <Grid item align='center' xs>\r\n              <DatePicker selectedDate ={dateTo}  onChange={handleDateToChange}  label= \"To\"/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n  \r\n        <Grid item align=\"center\" xs>\r\n          <Button onClick={handleCalculateClick} size=\"large\" variant=\"contained\">Calculate</Button>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  export default CalcView","import '../App.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, {useState} from 'react';\r\n\r\nimport MainHeader from '../ui/components/Header/MainHeader'\r\nimport CalcView from '../ui/views/CalcView'\r\n\r\nconst Home = (props) => {\r\n    const title = \"Crypto DCA\"\r\n    return (\r\n        <div className=\"app-body\">\r\n          <div style={{marginBottom: '50px'}}>\r\n            <MainHeader title = {title}/>\r\n          </div>\r\n          <div>\r\n            <CalcView/>\r\n          </div>\r\n          <div id='stars'></div>\r\n          <div id='stars2'></div>\r\n          <div id='stars3'></div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Home","import { createElement , useEffect } from 'react'\r\nimport { Divider } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\n\r\nconst PortfolioCard = (props) => {\r\n    const {category, text, result} = props.cardInfo || {category:'none', text: 'none', result: 'none'}\r\n    const icon = props.icon || 0\r\n    \r\n    const style = {\r\n      height: '350px',\r\n      width: '450px'\r\n    }\r\n\r\n    const chooseIcon = (num) =>{\r\n      const array = [<GradeIcon/>, <ShowChartIcon/>, <CardMembershipIcon/>]\r\n      return ( \r\n        array[num]\r\n      )\r\n    }\r\n\r\n    return (\r\n        <Card style={style} variant=\"outlined\">\r\n        <CardContent align=\"left\">\r\n          {chooseIcon(icon)}\r\n        </CardContent>\r\n        <CardContent>\r\n          <Typography  variant=\"h4\" gutterBottom>\r\n            {category}\r\n          </Typography>\r\n          <Typography variant=\"h6\" color=\"textSecondary\">\r\n            {text}\r\n          </Typography>\r\n          \r\n        </CardContent>\r\n        <Divider style={{marginTop:'10px', marginBottom:'10px'}}/>\r\n        <CardContent>\r\n          <Typography align='center'  variant=\"h3\" color=\"primary\">\r\n              {result}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default PortfolioCard","import PortfolioCard from '../components/PortfolioCard'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst PortfolioCardView = (props) => {\r\n    const cardProp = {\r\n      title: \"Percent Gains\",\r\n      description: \"the amount of gains per transactions\",\r\n      amount: \"100%\"\r\n    };\r\n  \r\n    return (\r\n    <div style={{ justifyContent:'center', alignItems:'center', display:'flex'}}>\r\n      <div>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={4}>\r\n          <Grid item align=\"center\" xs>\r\n            <PortfolioCard cardInfo = {props.cardInfo[0]} icon='0' info={cardProp}/>\r\n          </Grid>\r\n          <Grid item align=\"center\" xs>\r\n            <PortfolioCard cardInfo = {props.cardInfo[1]} icon='2' info={cardProp}/>\r\n          </Grid>\r\n          <Grid item align=\"center\" xs>\r\n            <PortfolioCard cardInfo = {props.cardInfo[2]} icon='1' info={cardProp}/>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={4}>\r\n          <Grid item align=\"center\" xs>\r\n            <PortfolioCard cardInfo = {props.cardInfo[3]} icon='2' info={cardProp}/>\r\n          </Grid>\r\n          <Grid item align=\"center\" xs>\r\n            <PortfolioCard cardInfo = {props.cardInfo[4]} icon='1' info={cardProp}/>\r\n          </Grid>\r\n          <Grid item align=\"center\" xs>\r\n            <PortfolioCard cardInfo = {props.cardInfo[5]} icon='0' info={cardProp}/>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\nexport default PortfolioCardView","import '../App.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nimport MainHeader from '../ui/components/Header/MainHeader'\r\nimport PortfolioCardView from '../ui/views/PortfolioCardView'\r\nimport { Typography } from '@material-ui/core';\r\nimport cardProps  from '../controller/CardInfo'\r\n\r\nconst Results = (props) => {\r\n    const [cardInfo, setCardInfo] = useState([])\r\n\r\n    useEffect(()=>{\r\n      setCardInfo(cardProps(props.location.state))\r\n    },[])\r\n\r\n    const title = \"Crypto DCA\"\r\n    return (\r\n        <div className=\"app-body\">\r\n        <div style={{marginBottom: '25px'}}>\r\n          <MainHeader title = {title}/>\r\n        </div>\r\n        <div>\r\n          <Typography style={{marginBottom: '25px'}} align=\"center\" variant='h2' > {props.location.state.coinName} </Typography>\r\n          <PortfolioCardView cardInfo={cardInfo}/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Results","// return array of card props to populate \r\n// the portfolioCardView\r\nexport default function cardProps(info) {\r\n    var {buyAmount, coinName, dateTo , dateFrom, details} = info\r\n    dateTo = `${dateTo.getMonth() + 1}/${dateTo.getFullYear()}`;\r\n    dateFrom = `${dateFrom.getMonth() + 1}/${dateFrom.getFullYear()}`;\r\n\r\n    var results = []\r\n    if (details.avgPrice !=='undefined'){\r\n        results.push({\r\n            category : 'Average Cost',\r\n            text: `The average cost of ${coinName} starting from ${dateFrom} to ${dateTo} considering a monthly buy of ${buyAmount}`,\r\n            result: details.avgPrice\r\n        })\r\n    }\r\n    if (details.totalAmountPaid !=='undefined'){\r\n        results.push({\r\n            category : 'Total Amount Paid',\r\n            text: `The total amount of money spent on ${coinName}. The baseline to determine how much profits you made`,\r\n            result: details.totalAmountPaid\r\n        })\r\n    }\r\n    if (details.totalCoins !=='undefined'){\r\n        results.push({\r\n            category : 'Total Coins',\r\n            text: `The current amount of ${coinName} acquired from your monthly buys`,\r\n            result: details.totalCoins\r\n        })\r\n    }\r\n\r\n    if (details.totalValuation !=='undefined'){\r\n        results.push({\r\n            category : 'Valuation',\r\n            text: `How much your current stack of ${coinName} are worth in the month of ${dateTo}`,\r\n            result: details.totalValuation\r\n        })\r\n    }\r\n\r\n    if (details.profit !=='undefined'){\r\n        results.push({\r\n            category : 'Profit',\r\n            text: `The amount of money you have earned in total if you were to sell in the month of ${dateTo}`,\r\n            result: details.profit\r\n        })\r\n    }\r\n\r\n    if (details.percentGains !=='undefined'){\r\n        results.push({\r\n            category : 'Percent Gains',\r\n            text: `The amount your ${coinName} have appreciated in value percentage wise`,\r\n            result: details.percentGains\r\n        })\r\n    }\r\n\r\n    return results\r\n}\r\n\r\n","import './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from './pages/Home'\r\nimport Results from './pages/Results'\r\nimport {Route, BrowserRouter as Router, Switch, Link} from \"react-router-dom\"\r\n\r\n\r\n\r\nfunction App() {\r\n  return(\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/CryptoDCA/results' component={Results}/>\r\n        <Route path='/CryptoDCA/' exact component={Home}/>\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n    \r\n  )\r\n}\r\n\r\nfunction NotFound() {\r\n  return <>You have landed on a page that doesn't exist</>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}